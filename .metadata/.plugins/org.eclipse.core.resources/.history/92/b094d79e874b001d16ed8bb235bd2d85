package kr.bit.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.bit.model.MemberDAO;
import kr.bit.model.MemberVO;


@WebServlet("/memberList.do")
public class MemberListController extends HttpServlet {
	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//1. 클라이언트의 요청을 받는다. -> memberList.do
		//2. 회원 전체리스트 가져오기 -> model(DAO)과 연동
		MemberDAO dao = new MemberDAO();
		
		//memberList() -> dao에서 전체 회원리스트를 가져오고 묶고 list에 담는 메서드
		ArrayList<MemberVO> list = dao.memberList(); 
		
		/*3. 회원전체리스트를 HTML로 만들어서 응답하기  
		-> 응답되는 데이터 안에 한글이 있는 경우 인코딩 하기*/ 
		//MIME-TYPE - 서버가 클라이언트에게 어떤 종류의 데이터를 보내는지 알려주는 것 -> out 객체 생성 전에 우선 설정할 것
		response.setContentType("text/html;charset=utf-8");  

		//System.out.println(list); 리스트 확인하기 
		PrintWriter out = response.getWriter(); 
		out.println("<html>");
		out.println("<head>");
		
		out.println("<meta name='viewport' content='width=device-width, initial-scale=1'>");
		out.println("<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css'>");
		out.println("<script src='https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js'>");
		out.println("</script>");
		out.println("<script src='https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js'>");
		out.println("</script>");
		out.println("<script src='https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js'>");
		out.println("</script>");
		
		out.println("<body>");
		out.println("<table class='table table-bordered'>");
		out.println("<thead>");
		out.println("<tr>");
		out.println("<th>번호</th>");
		out.println("<th>아이디</th>");
		out.println("<th>비밀번호</th>");
		out.println("<th>이름</th>");
		out.println("<th>나이</th>");
		out.println("<th>이메일</th>");
		out.println("<th>전화번호</th>");
		out.println("</tr>");
		out.println("</thead>");
		out.println("<tbody>");
		
		//rs(커서) 데이터 찾기 반복문처리 
		for(MemberVO vo : list) {
			out.println("<tr>");
			out.println("<td>"+vo.getNum()+"</td>");
			out.println("<td>"+vo.getId()+"</td>");
			out.println("<td>"+vo.getPass()+"</td>");
			out.println("<td>"+vo.getName()+"</td>");
			out.println("<td>"+vo.getAge()+"</td>");
			out.println("<td>"+vo.getEmail()+"</td>");
			out.println("<td>"+vo.getPhone()+"</td>");
			out.println("</tr>");			
		}
		
		out.println("</tbody>");
		out.println("<tr>");
		out.println("<td clospan='7'>");
		out.println("<\td>");
		out.println("</tr>");
		out.println("</table>");
		out.println("</body>");
		out.println("</html>");
	}

}
